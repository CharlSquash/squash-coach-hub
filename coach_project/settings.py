"""
Django settings for coach_project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file in the base directory
load_dotenv(os.path.join(BASE_DIR, '.env')) 

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Get SECRET_KEY from environment variables
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-fallback-key-if-not-set') # Added fallback for safety

# SECURITY WARNING: don't run with debug turned on in production!
# Get DEBUG from environment variable, default to False if not set. 
# Ensure your local .env file sets DEBUG=True
DEBUG = os.environ.get('DEBUG', 'False') == 'True' 

# Define ALLOWED_HOSTS. Add any other hosts needed for local testing (e.g. ngrok)
# Ideally, the production domain ('CharlSquash.pythonanywhere.com') is added via environment variable 
# or a separate production settings file, not hardcoded here. Keeping it for now based on previous state.
ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    'CharlSquash.pythonanywhere.com', 
]

# Define CSRF_TRUSTED_ORIGINS for secure POST requests
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'https://*.ngrok-free.app', # If using ngrok (use correct ngrok domain if different)
    'https://CharlSquash.pythonanywhere.com', # Production domain (HTTPS)
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'planning.apps.PlanningConfig', # Your app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'coach_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], # No project-level templates directory defined
        'APP_DIRS': True, # Looks for templates inside apps' 'templates' folders
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', # Often useful for debugging
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'coach_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# This uses SQLite locally. Production (PythonAnywhere) likely uses MySQL or PostgreSQL,
# which should ideally be configured via environment variables or separate settings.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Africa/Johannesburg' # Your specified timezone
USE_I18N = True
USE_TZ = True # Important for timezone-aware datetimes


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/' # URL prefix for static files

# STATIC_ROOT is the directory where `collectstatic` will gather all static files.
# It's primarily used for PRODUCTION deployment. Not usually needed for local dev server.
# Ensure the path below matches your PythonAnywhere setup in the Web tab -> Static Files section.
# Using the confirmed project name 'squash-coach-hub'. Comment out locally if not needed.
# STATIC_ROOT = '/home/CharlSquash/squash-coach-hub/staticfiles/'

# Optional: Define a directory for local static files if needed (if you have project-level static files)
# STATICFILES_DIRS = [ BASE_DIR / "static" ]


# Media files (User Uploads like profile pictures)
# https://docs.djangoproject.com/en/5.2/topics/files/

MEDIA_URL = '/media/' # URL prefix for user-uploaded files

# MEDIA_ROOT is the absolute filesystem path to the directory for user-uploaded files.
# This path is for LOCAL development.
MEDIA_ROOT = BASE_DIR / 'mediafiles/' 
# --- IMPORTANT FOR PYTHONANYWHERE ---
# Ensure you have a mapping on the PA Web Tab -> Static Files section:
# URL: /media/  (Matches MEDIA_URL)
# Directory: /home/CharlSquash/squash-coach-hub/mediafiles/ (Matches your project structure on PA)


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'