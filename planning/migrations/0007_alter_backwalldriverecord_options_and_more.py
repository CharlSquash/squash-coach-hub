# Generated by Django 5.2 on 2025-04-21 12:56

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('planning', '0006_player_photo_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='backwalldriverecord',
            options={'ordering': ['-date_recorded', 'shot_type']},
        ),
        migrations.AlterModelOptions(
            name='courtsprintrecord',
            options={'ordering': ['-date_recorded', 'duration_choice']},
        ),
        migrations.AlterModelOptions(
            name='matchresult',
            options={'ordering': ['-date', 'player__last_name']},
        ),
        migrations.AlterModelOptions(
            name='schoolgroup',
            options={},
        ),
        migrations.AlterModelOptions(
            name='sessionassessment',
            options={'ordering': ['-date_recorded', 'player__last_name']},
        ),
        migrations.AlterModelOptions(
            name='volleyrecord',
            options={'ordering': ['-date_recorded', 'shot_type']},
        ),
        migrations.AlterUniqueTogether(
            name='sessionassessment',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='drill',
            name='category',
        ),
        migrations.RemoveField(
            model_name='drill',
            name='duration_minutes',
        ),
        migrations.RemoveField(
            model_name='schoolgroup',
            name='players',
        ),
        migrations.AddField(
            model_name='activityassignment',
            name='activity_notes',
            field=models.TextField(blank=True, help_text='Specific notes for this activity instance.'),
        ),
        migrations.AddField(
            model_name='coach',
            name='email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='coach',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='coach',
            name='phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='drill',
            name='duration_minutes_default',
            field=models.PositiveIntegerField(default=10, help_text='Default duration in minutes when adding to a session.', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='drill',
            name='ideal_num_players',
            field=models.IntegerField(blank=True, choices=[(1, '1 Player'), (2, '2 Players'), (3, '3 Players'), (4, '4+ Players')], help_text='Ideal number of players for this drill (if not suitable for any number).', null=True),
        ),
        migrations.AddField(
            model_name='drill',
            name='suitable_for_any',
            field=models.BooleanField(default=False, help_text='Check if this drill works well regardless of the specific number of players.'),
        ),
        migrations.AddField(
            model_name='player',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='player',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='player',
            name='school_groups',
            field=models.ManyToManyField(blank=True, related_name='players', to='planning.schoolgroup'),
        ),
        migrations.AlterField(
            model_name='activityassignment',
            name='court_number',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='activityassignment',
            name='custom_activity_name',
            field=models.CharField(blank=True, help_text='Use this if not selecting a pre-defined Drill.', max_length=150),
        ),
        migrations.AlterField(
            model_name='activityassignment',
            name='duration_minutes',
            field=models.PositiveIntegerField(default=10, help_text='Estimated duration for this specific activity.', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='activityassignment',
            name='lead_coach',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_activities', to='planning.coach'),
        ),
        migrations.AlterField(
            model_name='activityassignment',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Order of activity within the court/block (0 first).'),
        ),
        migrations.AlterField(
            model_name='backwalldriverecord',
            name='consecutive_count',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='backwalldriverecord',
            name='session',
            field=models.ForeignKey(blank=True, help_text='Optional: Link to the session where the test was done.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drive_tests_conducted', to='planning.session'),
        ),
        migrations.AlterField(
            model_name='coach',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='courtsprintrecord',
            name='duration_choice',
            field=models.CharField(choices=[('3m', '3 Minutes'), ('5m', '5 Minutes'), ('10m', '10 Minutes')], max_length=3),
        ),
        migrations.AlterField(
            model_name='courtsprintrecord',
            name='score',
            field=models.PositiveIntegerField(help_text='Number of full court lengths completed.'),
        ),
        migrations.AlterField(
            model_name='courtsprintrecord',
            name='session',
            field=models.ForeignKey(blank=True, help_text='Optional: Link to the session where the test was done.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sprint_tests_conducted', to='planning.session'),
        ),
        migrations.AlterField(
            model_name='drill',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='drill',
            name='name',
            field=models.CharField(max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name='matchresult',
            name='is_competitive',
            field=models.BooleanField(default=False, help_text='Was this an official league/tournament match?'),
        ),
        migrations.AlterField(
            model_name='matchresult',
            name='match_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='matchresult',
            name='opponent_name',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='matchresult',
            name='opponent_score_str',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='matchresult',
            name='player_score_str',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='matchresult',
            name='session',
            field=models.ForeignKey(blank=True, help_text='Optional: Link to the session if it was a practice match during training.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_played', to='planning.session'),
        ),
        migrations.AlterField(
            model_name='player',
            name='first_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='player',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='player',
            name='last_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='player',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='player_photos/'),
        ),
        migrations.AlterField(
            model_name='player',
            name='skill_level',
            field=models.CharField(blank=True, choices=[('BEG', 'Beginner'), ('INT', 'Intermediate'), ('ADV', 'Advanced')], default='BEG', max_length=3),
        ),
        migrations.AlterField(
            model_name='schoolgroup',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='schoolgroup',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='session',
            name='attendees',
            field=models.ManyToManyField(blank=True, related_name='sessions_attended', to='planning.player'),
        ),
        migrations.AlterField(
            model_name='session',
            name='coaches_attending',
            field=models.ManyToManyField(blank=True, related_name='sessions_coaching', to='planning.coach'),
        ),
        migrations.AlterField(
            model_name='session',
            name='notes',
            field=models.TextField(blank=True, help_text='Overall session objectives or notes.'),
        ),
        migrations.AlterField(
            model_name='session',
            name='planned_duration_minutes',
            field=models.PositiveIntegerField(default=60),
        ),
        migrations.AlterField(
            model_name='session',
            name='school_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='planning.schoolgroup'),
        ),
        migrations.AlterField(
            model_name='session',
            name='start_time',
            field=models.TimeField(default=datetime.time(15, 0)),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='coach_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='composure_rating',
            field=models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='decision_making_rating',
            field=models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='effort_rating',
            field=models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='focus_rating',
            field=models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='resilience_rating',
            field=models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True),
        ),
        migrations.AlterField(
            model_name='sessionassessment',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_assessments', to='planning.session'),
        ),
        migrations.AlterField(
            model_name='timeblock',
            name='block_focus',
            field=models.CharField(blank=True, help_text='Specific focus for this time block (e.g., Forehand Drives, Match Play).', max_length=200),
        ),
        migrations.AlterField(
            model_name='timeblock',
            name='duration_minutes',
            field=models.PositiveIntegerField(default=15, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='timeblock',
            name='number_of_courts',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='timeblock',
            name='rotation_interval_minutes',
            field=models.PositiveIntegerField(blank=True, help_text='Optional: Rotate players between courts every X minutes within this block.', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='timeblock',
            name='start_offset_minutes',
            field=models.PositiveIntegerField(default=0, help_text='Minutes from session start time.'),
        ),
        migrations.AlterField(
            model_name='volleyrecord',
            name='consecutive_count',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='volleyrecord',
            name='session',
            field=models.ForeignKey(blank=True, help_text='Optional: Link to the session where the test was done.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='volley_tests_conducted', to='planning.session'),
        ),
        migrations.AlterUniqueTogether(
            name='sessionassessment',
            unique_together={('session', 'player')},
        ),
    ]
