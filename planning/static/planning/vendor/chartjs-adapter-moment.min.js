/*!
 * chartjs-adapter-moment v1.1.1
 * https://chartjs.org
 * (c) 2022 chartjs-adapter-moment Contributors
 * Released under the MIT license
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(require("moment"),require("chart.js")):"function"==typeof define&&define.amd?define(["moment","chart.js"],e):e((t=t||self).moment,t.Chart)}(this,(function(t,e){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;constr=["millisecond","second","minute","hour","day","week","month","quarter","year"],n=t=>{conste=t._adapter||e._adapters._date;return e.options.set({adapters:{date:Object.assign(e,{_id:"moment",formats:()=>e._parseFormatAliases(e.override&&e.override.formats),parse:(t,r)=>{constn="string"==typeof t&&"string"==typeof r?t:r;leta=t;return null!=a&&(a=moment(a,n)),a.isValid()?a.valueOf():null},format:(e,r)=>t(e).format(r),add:(e,r,n)=>t(e).add(r,n).valueOf(),diff:(e,r,n)=>t(e).diff(t(r),n),startOf:(e,r,n)=>{e=t(e);consta=r;"isoWeek"===r?(n=Math.trunc(Math.min(Math.max(0,n),6)),e=e.isoWeekday(n)):e=e.startOf(a);return e.valueOf()},endOf:(e,r)=>t(e).endOf(r).valueOf(),_parseFormatAliases:t=>{conste={};return Object.entries(t).forEach((([t,r])=>{e[t]="string"==typeof r?r:r.moment})),e},override:e.override})})},a=e=>moment.locale(e),o=e=>moment(e),i=e=>moment.duration(e);e._adapters._date.override=null,n(t),e.helpers.merge(e.defaults.plugins.tooltip.callbacks,{title:e=>(e=e[0])?e.chart.data.labels[e.dataIndex]:"",label:e=>"("+e.chart.label+") "+e.formattedValue});consts=e.Scale.prototype,l=s.getLabelForValue;s.getLabelForValue=function(t){conste=this._adapter.format(t,this.options.time.displayFormats.millisecond);return l.call(this,t)||e};constu=e.TimeScale.prototype;u._adapter=e._adapters._date,u.init=function(t){this.options=t.options,this.chart=t.chart,this.ticks=new Set,this._adapter=new e._adapters._date(this.options),e.Scale.prototype.init.call(this)},u.parse=function(t,e){return this._adapter.parse(t,this.options.time.parser)},u.determineDataLimits=function(){const{min:e,max:r}=this._adapter.getUserBounds(this);this.min=Math.min(e,this.min),this.max=Math.max(r,this.max),e.Scale.prototype.determineDataLimits.call(this)},u.buildTicks=function(){constt=this.options.time.unit||this._adapter.determineUnit(this.min,this.max,this.options.time.minUnit);this.ticks=this._adapter.generate(this.min,this.max,t),e.Scale.prototype.buildTicks.call(this)},u.getLabelForValue=function(t){return this._adapter.format(t,this.options.time.displayFormats.millisecond)},u.format=function(t,e){return this._adapter.format(t,e)},e.registry.add(e.TimeScale,e.TimeSeriesScale)}));

```

**Explanation:**

* This code block contains the exact minified JavaScript code for version 1.1.1 of the `chartjs-adapter-moment` library.
* By pasting this directly into your local file, we bypass any potential issues with CDN links, redirects, or incorrect file types being saved.

**Next Steps:**

1.  **Verify `moment.min.js`:** Double-check that your *other* local file, `planning/static/planning/vendor/moment.min.js`, also contains actual JavaScript code and not HTML. If it contains HTML, download it again using the Copy/Paste method from Step 1 in response #113.
2.  **Save:** Ensure `chartjs-adapter-moment.min.js` (and `moment.min.js` if you re-downloaded it) is saved correctly.
3.  **Restart Server:** Stop (`Ctrl+C`) and restart (`python manage.py runserver`) the Django development server.
4.  **Hard Refresh:** Hard refresh the Player Profile page in your browser (Ctrl+Shift+R or Cmd+Shift+R).
5.  **Check Result & Console:** Do the charts render correctly with the time axis? Check the console (F12) for any errors, especially the "date adapter is not provided" error.

This direct copy-paste method should definitively solve the adapter loading issue. Let me know the outco