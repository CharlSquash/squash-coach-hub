# Generated by Django 5.2 on 2025-04-30 03:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SoloDrill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True)),
                ('metrics_definition', models.JSONField(blank=True, default=dict, help_text='Defines potential metrics and their types')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_drills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoutineDrillLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Sequence number (1, 2, 3...)')),
                ('duration_seconds', models.PositiveIntegerField(blank=True, help_text='Time for the drill (seconds)', null=True)),
                ('reps_target', models.PositiveIntegerField(blank=True, help_text='Target repetitions', null=True)),
                ('rest_after_seconds', models.PositiveIntegerField(default=30, help_text='Rest duration after this drill (seconds)')),
                ('metrics_to_collect', models.JSONField(blank=True, default=list, help_text='List of metric keys to log for this step')),
                ('notes', models.TextField(blank=True, help_text='Optional notes for the player for this specific step')),
                ('drill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solosync_api.solodrill')),
            ],
            options={
                'ordering': ['routine', 'order'],
            },
        ),
        migrations.CreateModel(
            name='SoloRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_players', models.ManyToManyField(blank=True, help_text='Players assigned to perform this routine', related_name='assigned_solo_routines', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_routines', to=settings.AUTH_USER_MODEL)),
                ('drills', models.ManyToManyField(related_name='routines_included_in', through='solosync_api.RoutineDrillLink', to='solosync_api.solodrill')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='routinedrilllink',
            name='routine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solosync_api.soloroutine'),
        ),
        migrations.CreateModel(
            name='SoloSessionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(db_index=True, help_text='Timestamp when the session was logged as complete')),
                ('physical_difficulty', models.PositiveIntegerField(help_text='Player rating (1-5) of physical difficulty', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True, help_text='Optional overall player notes for the session')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solo_session_logs', to=settings.AUTH_USER_MODEL)),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_logs', to='solosync_api.soloroutine')),
            ],
            options={
                'ordering': ['-completed_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='routinedrilllink',
            unique_together={('routine', 'order')},
        ),
        migrations.CreateModel(
            name='SoloSessionMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(help_text="e.g., 'reps', 'target_hits'", max_length=50)),
                ('metric_value', models.CharField(help_text='Logged value (stored as string for flexibility)', max_length=100)),
                ('drill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logged_metrics_instances', to='solosync_api.solodrill')),
                ('session_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logged_metrics', to='solosync_api.solosessionlog')),
            ],
            options={
                'indexes': [models.Index(fields=['session_log', 'drill'], name='solosync_ap_session_5253f7_idx')],
            },
        ),
    ]
